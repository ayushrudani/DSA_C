37. Evaluate the following expressions showing every status of stack in tabular form:



Given prefix expression: *, +, 6, 9, -, 3, 1

1. Operand: 1
   - Push 1 onto the stack: Stack = [1]

2. Operand: 3
   - Push 3 onto the stack: Stack = [1, 3]

3. Operator: -
   - Pop two operands from the stack (3 and 1).
   - Subtract them: 3 - 1 = 2
   - Push the result (2) onto the stack: Stack = [2]

4. Operand: 9
   - Push 9 onto the stack: Stack = [2, 9]

5. Operand: 6
   - Push 6 onto the stack: Stack = [2, 9, 6]

6. Operator: +
   - Pop two operands from the stack (6 and 9).
   - Add them: 6 + 9 = 15
   - Push the result (15) onto the stack: Stack = [2, 15]

7. Operator: *
   - Pop two operands from the stack (15 and 2).
   - Multiply them: 15 * 2 = 30
   - Push the result (30) onto the stack: Stack = [30]

So, the evaluated value of the given prefix expression is 30.




Given prefix expression: +, -, *, 2, 2, 1, 16, 8, 5

1. Operand: 5
   - Push 5 onto the stack: Stack = [5]

2. Operand: 8
   - Push 8 onto the stack: Stack = [5, 8]

3. Operand: 16
   - Push 16 onto the stack: Stack = [5, 8, 16]

4. Operand: 1
   - Push 1 onto the stack: Stack = [5, 8, 16, 1]

5. Operand: 2
   - Push 2 onto the stack: Stack = [5, 8, 16, 1, 2]

6. Operand: 2
   - Push 2 onto the stack: Stack = [5, 8, 16, 1, 2, 2]

7. Operator: *
   - Pop two operands from the stack (2 and 2).
   - Multiply them: 2 * 2 = 4
   - Push the result (4) onto the stack: Stack = [5, 8, 16, 1, 4]

8. Operator: -
   - Pop two operands from the stack (1 and 4).
   - Subtract them: 1 - 4 = -3
   - Push the result (-3) onto the stack: Stack = [5, 8, 16, -3]

9. Operator: +
   - Pop two operands from the stack (-3 and 16).
   - Add them: -3 + 16 = 13
   - Push the result (13) onto the stack: Stack = [5, 8, 13]

10. Operator: -
    - Pop two operands from the stack (13 and 8).
    - Subtract them: 13 - 8 = 5
    - Push the result (5) onto the stack: Stack = [5, 5]

11. Operator: +
    - Pop two operands from the stack (5 and 5).
    - Add them: 5 + 5 = 10
    - Push the result (10) onto the stack: Stack = [10]

So, the evaluated value of the given prefix expression is 10.